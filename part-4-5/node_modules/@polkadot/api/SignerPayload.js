"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _types = require("@polkadot/types");

// Copyright 2017-2019 @polkadot/api authors & contributors
// This software may be modified and distributed under the terms
// of the Apache-2.0 license. See the LICENSE file for details.
class SignerPayload extends _types.Struct.with({
  address: _types.Address,
  blockHash: _types.Hash,
  blockNumber: _types.BlockNumber,
  era: _types.ExtrinsicEra,
  genesisHash: _types.Hash,
  method: _types.Method,
  nonce: _types.Compact.with(_types.Nonce),
  tip: _types.Compact.with(_types.Balance),
  version: _types.U8
}) {
  /**
   * @description Returns this as a SignerPayloadType. This works since the Struct.with injects all the getters automatically (just ensure the 2 definitiona are matching)
   */
  get self() {
    return this;
  }
  /**
   * @description Creates an representation of the structure as an ISignerPayload JSON
   */


  toPayload() {
    const {
      address,
      blockHash,
      blockNumber,
      era,
      genesisHash,
      method,
      nonce,
      tip,
      version
    } = this.self;
    return {
      address: address.toString(),
      blockHash: blockHash.toHex(),
      blockNumber: blockNumber.toHex(),
      era: era.toHex(),
      genesisHash: genesisHash.toHex(),
      method: method.toHex(),
      nonce: nonce.toHex(),
      tip: tip.toHex(),
      version: version.toNumber()
    };
  }

}

exports.default = SignerPayload;