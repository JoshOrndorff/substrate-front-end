import { Signer as InjectedSigner } from '@polkadot/api/types';
export declare type Unsubcall = () => void;
export interface InjectedAccount {
    address: string;
    name: string;
}
export interface InjectedAccountWithMeta {
    address: string;
    meta: {
        name: string;
        source: string;
    };
}
export interface InjectedAccounts {
    get: () => Promise<InjectedAccount[]>;
    subscribe: (cb: (accounts: InjectedAccount[]) => any) => Unsubcall;
}
export interface InjectedExtensionInfo {
    name: string;
    version: string;
}
export interface Injected {
    accounts: InjectedAccounts;
    signer: InjectedSigner;
}
export interface InjectedWindowProvider {
    enable: (origin: string) => Promise<Injected>;
    version: string;
}
export interface InjectedWindow extends Window {
    injectedWeb3: Record<string, InjectedWindowProvider>;
}
export declare type InjectedExtension = InjectedExtensionInfo & Injected;
export declare type InjectOptions = InjectedExtensionInfo;
