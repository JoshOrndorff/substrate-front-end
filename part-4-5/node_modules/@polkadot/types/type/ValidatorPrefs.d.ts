import { AnyNumber } from '../types';
import Compact from '../codec/Compact';
import Struct from '../codec/Struct';
import Balance from '../primitive/Balance';
import U32 from '../primitive/U32';
interface ValidatorPrefsValue {
    unstakeThreshold?: AnyNumber;
    validatorPayment?: AnyNumber;
}
/**
 * @name ValidatorPrefs
 * @description
 * Validator preferences
 */
export default class ValidatorPrefs extends Struct {
    constructor(value?: ValidatorPrefsValue | Uint8Array);
    /**
     * @description The unstake threshold as [[U32]]
     */
    readonly unstakeThreshold: Compact<U32>;
    /**
     * @description The payment config for the validator as a [[Compact]] [[Balance]]
     */
    readonly validatorPayment: Compact<Balance>;
}
export {};
