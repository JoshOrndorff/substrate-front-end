"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.extraDefinition = void 0;

var _Struct = _interopRequireDefault(require("../../../codec/Struct"));

var _BalanceCompact = _interopRequireDefault(require("../../BalanceCompact"));

var _ExtrinsicEra = _interopRequireDefault(require("../ExtrinsicEra"));

var _NonceCompact = _interopRequireDefault(require("../../../type/NonceCompact"));

// Copyright 2017-2019 @polkadot/types authors & contributors
// This software may be modified and distributed under the terms
// of the Apache-2.0 license. See the LICENSE file for details.
const extraDefinition = {
  era: _ExtrinsicEra.default,
  nonce: _NonceCompact.default,
  tip: _BalanceCompact.default
};
/**
 * @name ExtrinsicExtraV2
 * @description
 * A container for the extra information in an extrinsic
 */

exports.extraDefinition = extraDefinition;

class ExtrinsicExtraV2 extends _Struct.default {
  constructor(value) {
    super(extraDefinition, value);
  }
  /**
   * @description The [[ExtrinsicEra]] (mortal or immortal) this signature applies to
   */


  get era() {
    return this.get('era');
  }
  /**
   * @description The [[NonceCompact]] for the signature
   */


  get nonce() {
    return this.get('nonce');
  }
  /**
   * @description The [[Address]] that signed
   */


  get signer() {
    return this.get('signer');
  }
  /**
   * @description The [[BalanceCompact]] tip
   */


  get tip() {
    return this.get('tip');
  }

}

exports.default = ExtrinsicExtraV2;