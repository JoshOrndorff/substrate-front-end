{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/home/thib/github/substrate-developer-hub/basic-dapp/part-4-5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.referendumVotesFor = referendumVotesFor;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _types = require(\"@polkadot/types\");\n\nvar _drr = require(\"../util/drr\");\n\nvar _votes = require(\"./votes\");\n\nvar _votingBalances = require(\"../balances/votingBalances\"); // Copyright 2017-2019 @polkadot/api-derive authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n\nfunction referendumVotesFor(api) {\n  return referendumId => api.query.democracy.votersFor(referendumId).pipe((0, _operators.switchMap)(votersFor => (0, _rxjs.combineLatest)([(0, _rxjs.of)(votersFor), (0, _votes.votes)(api)(referendumId, votersFor), (0, _votingBalances.votingBalances)(api)(votersFor)])), (0, _operators.map)(_ref => {\n    let _ref2 = _slicedToArray(_ref, 3),\n        votersFor = _ref2[0],\n        votes = _ref2[1],\n        balances = _ref2[2];\n\n    return votersFor.map((accountId, index) => ({\n      accountId,\n      balance: balances[index].votingBalance || new _types.Balance(0),\n      vote: votes[index] || new _types.Vote(0)\n    }));\n  }), (0, _drr.drr)());\n}","map":null,"metadata":{},"sourceType":"script"}