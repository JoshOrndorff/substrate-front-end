{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _method = _interopRequireDefault(require(\"./create/method\"));\n\nvar _param = _interopRequireDefault(require(\"./create/param\")); // Copyright 2017-2019 @polkadot/jsonrpc authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n// NOTE Order is the same as in Rust\n\n\nconst getHeader = {\n  description: 'Retrieves the header for a specific block',\n  params: [(0, _param.default)('hash', 'Hash', {\n    isOptional: true\n  })],\n  type: 'Header'\n};\nconst getBlock = {\n  description: 'Get header and body of a relay chain block',\n  params: [(0, _param.default)('hash', 'Hash', {\n    isOptional: true\n  })],\n  type: 'SignedBlock'\n};\nconst getBlockHash = {\n  description: 'Get the block hash for a specific block',\n  params: [(0, _param.default)('blockNumber', 'BlockNumber', {\n    isOptional: true\n  })],\n  type: 'Hash'\n};\nconst getFinalizedHead = {\n  description: 'Get hash of the last finalized block in the canon chain',\n  params: [],\n  type: 'Hash'\n};\nconst getRuntimeVersion = {\n  description: 'Get the runtime version (alias of state_getRuntimeVersion)',\n  params: [(0, _param.default)('hash', 'Hash', {\n    isOptional: true\n  })],\n  type: 'RuntimeVersion'\n};\nconst subscribeNewHead = {\n  description: 'Retrieves the best header via subscription',\n  params: [],\n  pubsub: ['newHead', 'subscribeNewHead', 'unsubscribeNewHead'],\n  type: 'Header'\n};\nconst subscribeFinalizedHeads = {\n  description: 'Retrieves the best finalized header via subscription',\n  params: [],\n  pubsub: ['finalizedHead', 'subscribeFinalizedHeads', 'unsubscribeFinalizedHeads'],\n  type: 'Header'\n};\nconst subscribeRuntimeVersion = {\n  description: 'Retrieves the runtime version via subscription',\n  params: [],\n  pubsub: ['runtimeVersion', 'subscribeRuntimeVersion', 'unsubscribeRuntimeVersion'],\n  type: 'RuntimeVersion'\n};\nconst section = 'chain';\n/**\n * @summary Methods to retrieve chain data.\n */\n\nvar _default = {\n  isDeprecated: false,\n  isHidden: false,\n  description: 'Retrieval of chain data',\n  section,\n  methods: {\n    getBlock: (0, _method.default)(section, 'getBlock', getBlock),\n    getBlockHash: (0, _method.default)(section, 'getBlockHash', getBlockHash),\n    // TODO US spelling\n    getFinalizedHead: (0, _method.default)(section, 'getFinalizedHead', getFinalizedHead),\n    getHeader: (0, _method.default)(section, 'getHeader', getHeader),\n    getRuntimeVersion: (0, _method.default)(section, 'getRuntimeVersion', getRuntimeVersion),\n    // TODO US spelling\n    subscribeFinalizedHeads: (0, _method.default)(section, 'subscribeFinalizedHeads', subscribeFinalizedHeads),\n    subscribeRuntimeVersion: (0, _method.default)(section, 'subscribeRuntimeVersion', subscribeRuntimeVersion),\n    subscribeNewHead: (0, _method.default)(section, 'subscribeNewHead', subscribeNewHead)\n  }\n};\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}