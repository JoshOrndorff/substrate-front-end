{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"DoubleMapType\", {\n  enumerable: true,\n  get: function get() {\n    return _Storage.DoubleMapType;\n  }\n});\nObject.defineProperty(exports, \"MapType\", {\n  enumerable: true,\n  get: function get() {\n    return _Storage.MapType;\n  }\n});\nObject.defineProperty(exports, \"PlainType\", {\n  enumerable: true,\n  get: function get() {\n    return _Storage.PlainType;\n  }\n});\nObject.defineProperty(exports, \"StorageEntryMetadata\", {\n  enumerable: true,\n  get: function get() {\n    return _Storage.StorageEntryMetadata;\n  }\n});\nObject.defineProperty(exports, \"StorageEntryMetadataValue\", {\n  enumerable: true,\n  get: function get() {\n    return _Storage.StorageEntryMetadataValue;\n  }\n});\nObject.defineProperty(exports, \"StorageEntryModifier\", {\n  enumerable: true,\n  get: function get() {\n    return _Storage.StorageEntryModifier;\n  }\n});\nObject.defineProperty(exports, \"StorageEntryType\", {\n  enumerable: true,\n  get: function get() {\n    return _Storage.StorageEntryType;\n  }\n});\nexports.StorageMetadata = void 0;\n\nvar _Struct = _interopRequireDefault(require(\"../../codec/Struct\"));\n\nvar _Vector = _interopRequireDefault(require(\"../../codec/Vector\"));\n\nvar _Text = _interopRequireDefault(require(\"../../primitive/Text\"));\n\nvar _Storage = require(\"../v6/Storage\"); // Copyright 2017-2019 @polkadot/types authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n// Re-export classes that haven't changed between V6 and V7\n\n\nclass StorageMetadata extends _Struct.default {\n  constructor(value) {\n    super({\n      prefix: _Text.default,\n      // NOTE renamed to items from entries (since Struct already has entries from Map)\n      items: _Vector.default.with(_Storage.StorageEntryMetadata)\n    }, value);\n  }\n  /**\n   * @description the storage entries\n   */\n\n\n  get items() {\n    return this.get('items');\n  }\n  /**\n   * @description the prefix for this module\n   */\n\n\n  get prefix() {\n    return this.get('prefix');\n  }\n\n}\n\nexports.StorageMetadata = StorageMetadata;","map":null,"metadata":{},"sourceType":"script"}