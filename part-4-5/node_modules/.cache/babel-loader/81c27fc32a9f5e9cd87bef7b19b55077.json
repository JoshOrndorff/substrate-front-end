{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = validateTypes;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _createType = require(\"../../codec/createType\");\n\nvar _flattenUniq = _interopRequireDefault(require(\"./flattenUniq\"));\n\nvar _codec = require(\"../../codec\"); // Copyright 2017-2019 @polkadot/types authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n\nfunction validateTypes(types, throwError) {\n  const extractTypes = types => {\n    return types.map(type => {\n      const decoded = (0, _createType.getTypeDef)(type);\n\n      switch (decoded.info) {\n        case _createType.TypeDefInfo.Plain:\n          return decoded.type;\n\n        case _createType.TypeDefInfo.Compact:\n        case _createType.TypeDefInfo.Option:\n        case _createType.TypeDefInfo.Vector:\n          return extractTypes([decoded.sub.type]);\n\n        case _createType.TypeDefInfo.VectorFixed:\n          return extractTypes([decoded.ext.type]);\n\n        case _createType.TypeDefInfo.Tuple:\n          return extractTypes(decoded.sub.map(sub => sub.type));\n\n        default:\n          throw new Error(\"Uhandled: Unnable to create and validate type from \".concat(type));\n      }\n    });\n  };\n\n  const typeRegistry = (0, _codec.getTypeRegistry)();\n  const missing = (0, _flattenUniq.default)(extractTypes(types)).filter(type => (0, _util.isUndefined)(typeRegistry.get(type)));\n\n  if (missing.length !== 0) {\n    const message = \"Unknown types found, no types for \".concat(missing);\n\n    if (throwError) {\n      throw new Error(message);\n    } else {\n      console.error(message);\n    }\n  }\n}","map":null,"metadata":{},"sourceType":"script"}