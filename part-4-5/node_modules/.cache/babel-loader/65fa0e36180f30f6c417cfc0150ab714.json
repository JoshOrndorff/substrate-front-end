{"ast":null,"code":"import _objectSpread from \"/home/thib/github/substrate-developer-hub/basic-dapp/part-4-5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/thib/github/substrate-developer-hub/basic-dapp/part-4-5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/thib/github/substrate-developer-hub/basic-dapp/part-4-5/src/Transfer.js\";\nimport React, { useState } from 'react';\nimport { Dropdown, Form, Input } from 'semantic-ui-react';\nimport TxButton from './TxButton';\nexport default function Transfer(props) {\n  const api = props.api,\n        keyring = props.keyring;\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        status = _useState2[0],\n        setStatus = _useState2[1];\n\n  const initialState = {\n    addressFrom: '',\n    addressTo: '',\n    amount: 0\n  };\n\n  const _useState3 = useState(initialState),\n        _useState4 = _slicedToArray(_useState3, 2),\n        formState = _useState4[0],\n        setFormState = _useState4[1];\n\n  const addressTo = formState.addressTo,\n        addressFrom = formState.addressFrom,\n        amount = formState.amount;\n  const fromPair = addressFrom && keyring.getPair(addressFrom); // get the list of accounts we possess the private key for\n\n  const keyringOptions = keyring.getPairs().map(account => ({\n    key: account.address,\n    value: account.address,\n    text: account.meta.name.toUpperCase()\n  }));\n\n  const onChange = (_, data) => {\n    setFormState(formState => {\n      return _objectSpread({}, formState, {\n        [data.state]: data.value\n      });\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Transfer\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    placeholder: \"Select from  your accounts\",\n    fluid: true,\n    label: \"From\",\n    onChange: onChange,\n    search: true,\n    selection: true,\n    state: \"addressFrom\",\n    options: keyringOptions,\n    value: addressFrom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Input, {\n    onChange: onChange,\n    label: \"To\",\n    fluid: true,\n    placeholder: \"address\",\n    state: \"addressTo\",\n    type: \"text\",\n    value: addressTo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Input, {\n    label: \"Amount\",\n    fluid: true,\n    onChange: onChange,\n    state: \"amount\",\n    type: \"number\",\n    value: amount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(TxButton, {\n    api: api,\n    fromPair: fromPair,\n    label: 'Send',\n    params: [addressTo, amount],\n    setStatus: setStatus,\n    tx: api.tx.balances.transfer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), status)));\n}","map":{"version":3,"sources":["/home/thib/github/substrate-developer-hub/basic-dapp/part-4-5/src/Transfer.js"],"names":["React","useState","Dropdown","Form","Input","TxButton","Transfer","props","api","keyring","status","setStatus","initialState","addressFrom","addressTo","amount","formState","setFormState","fromPair","getPair","keyringOptions","getPairs","map","account","key","address","value","text","meta","name","toUpperCase","onChange","_","data","state","tx","balances","transfer"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Dropdown, Form, Input } from 'semantic-ui-react';\n\nimport TxButton from './TxButton';\n\nexport default function Transfer (props) {\n  const { api, keyring } = props;\n  const [status, setStatus] = useState('');\n  const initialState = {\n    addressFrom: '',\n    addressTo: '',\n    amount: 0\n  };\n  const [formState, setFormState] = useState(initialState);\n  const { addressTo, addressFrom, amount } = formState;\n  const fromPair = addressFrom && keyring.getPair(addressFrom);\n\n  // get the list of accounts we possess the private key for\n  const keyringOptions = keyring.getPairs().map((account) => ({\n    key: account.address,\n    value: account.address,\n    text: account.meta.name.toUpperCase()\n  }));\n\n  const onChange = (_, data) => {\n    setFormState(formState => {\n      return {\n        ...formState,\n        [data.state]: data.value\n      };\n    });\n  };\n\n  return (\n    <>\n      <h1>Transfer</h1>\n      <Form>\n        <Form.Field>\n          <Dropdown\n            placeholder='Select from  your accounts'\n            fluid\n            label=\"From\"\n            onChange={onChange}\n            search\n            selection\n            state='addressFrom'\n            options={keyringOptions}\n            value={addressFrom}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Input\n            onChange={onChange}\n            label='To'\n            fluid\n            placeholder='address'\n            state='addressTo'\n            type='text'\n            value={addressTo}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Input\n            label='Amount'\n            fluid\n            onChange={onChange}\n            state='amount'\n            type='number'\n            value={amount}\n          />\n        </Form.Field>\n        <Form.Field>\n          <TxButton\n            api={api}\n            fromPair={fromPair}\n            label={'Send'}\n            params={[addressTo, amount]}\n            setStatus={setStatus}\n            tx={api.tx.balances.transfer}\n          />\n          {status}\n        </Form.Field>\n      </Form>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}