{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Struct = _interopRequireDefault(require(\"../codec/Struct\"));\n\nvar _Balance = _interopRequireDefault(require(\"../primitive/Balance\"));\n\nvar _BlockNumber = _interopRequireDefault(require(\"./BlockNumber\"));\n\nvar _LockIdentifier = _interopRequireDefault(require(\"./LockIdentifier\"));\n\nvar _WithdrawReasons = _interopRequireDefault(require(\"./WithdrawReasons\")); // Copyright 2017-2019 @polkadot/types authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n/**\n * @name BalanceLock\n * @description\n * The Substrate BalanceLock for staking\n */\n\n\nclass BalanceLock extends _Struct.default {\n  constructor(value) {\n    super({\n      id: _LockIdentifier.default,\n      amount: _Balance.default,\n      until: _BlockNumber.default,\n      reasons: _WithdrawReasons.default\n    }, value);\n  }\n  /**\n   * @description The amount\n   */\n\n\n  get amount() {\n    return this.get('amount');\n  }\n  /**\n   * @description The lock id\n   */\n\n\n  get id() {\n    return this.get('id');\n  }\n  /**\n   * @description The reasons\n   */\n\n\n  get reasons() {\n    return this.get('reasons');\n  }\n  /**\n   * @description Until when this is available\n   */\n\n\n  get until() {\n    return this.get('until');\n  }\n\n}\n\nexports.default = BalanceLock;","map":null,"metadata":{},"sourceType":"script"}