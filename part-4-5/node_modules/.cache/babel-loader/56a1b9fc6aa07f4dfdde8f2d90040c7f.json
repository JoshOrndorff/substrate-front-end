{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Struct = _interopRequireDefault(require(\"../codec/Struct\"));\n\nvar _Balance = _interopRequireDefault(require(\"../primitive/Balance\"));\n\nvar _VoteIndex = _interopRequireDefault(require(\"./VoteIndex\")); // Copyright 2017-2019 @polkadot/types authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n/**\n * @name VoterInfo\n * @description\n * The activity status of a voter.\n */\n\n\nclass VoterInfo extends _Struct.default {\n  constructor(value) {\n    super({\n      lastActive: _VoteIndex.default,\n      lastWin: _VoteIndex.default,\n      pot: _Balance.default,\n      stake: _Balance.default\n    }, value);\n  }\n  /**\n   * @description Last VoteIndex in which this voter assigned (or initialized) approvals.\n   */\n\n\n  get lastActive() {\n    return this.get('lastActive');\n  }\n  /**\n   * @description  Last VoteIndex in which one of this voter's approvals won.\n   * Note that `last_win = N` indicates a last win at index `N-1`, hence `last_win = 0` means no win ever.\n   */\n\n\n  get lastWin() {\n    return this.get('lastWin');\n  }\n  /**\n   * @description The amount of stored weight as a result of not winning but changing approvals.\n   */\n\n\n  get pot() {\n    return this.get('pot');\n  }\n  /**\n   * @description Current staked amount. A lock equal to this value always exists.\n   */\n\n\n  get stake() {\n    return this.get('stake');\n  }\n\n}\n\nexports.default = VoterInfo;","map":null,"metadata":{},"sourceType":"script"}