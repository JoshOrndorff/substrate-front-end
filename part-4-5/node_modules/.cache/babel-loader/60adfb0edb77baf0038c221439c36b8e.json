{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.approvalsOf = approvalsOf;\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _approvalFlagsToBools = require(\"../util/approvalFlagsToBools\");\n\nvar _drr = require(\"../util/drr\"); // Copyright 2017-2019 @polkadot/api-derive authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n/**\n * @name approvalsOf\n * @returns A nested array of boolean approvals for the given account in each voter set index, converted from its ApprovalFlag(s).\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.elections.approvalsOf(ALICE, (approvals) => {\n *   // approvals === [[false], [true, false], ...]\n * });\n * ```\n */\n\n\nfunction approvalsOf(api) {\n  return who => api.query.elections.nextVoterSet().pipe((0, _operators.switchMap)(nextVoterSet => api.query.elections.approvalsOf.multi([...Array(nextVoterSet.toNumber() + 1).keys()].map(i => [who.toString(), i]))), (0, _operators.map)(votes => votes.map(flags => (0, _approvalFlagsToBools.approvalFlagsToBools)(flags))), (0, _drr.drr)());\n}","map":null,"metadata":{},"sourceType":"script"}