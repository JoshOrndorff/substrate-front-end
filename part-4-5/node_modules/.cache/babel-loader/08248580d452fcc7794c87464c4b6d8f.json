{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/home/thib/github/substrate-developer-hub/basic-dapp/part-4-5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.voterPositions = voterPositions;\n\nvar _types = require(\"@polkadot/types\");\n\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _drr = require(\"../util/drr\"); // Copyright 2017-2019 @polkadot/api-derive authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n/**\n * @name voterPositions\n * @returns An mapping of all current voter accounts to their voter set and global index.\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.elections.voterPositions((voters) => {\n *   const { index, setIndex, globalIndex } = voters[ALICE];\n *   console.log(`ALICE is a voter at index ${index} in voter set ${setIndex}, with global index ${globalIndex}.`);\n * });\n * ```\n */\n\n\nfunction voterPositions(api) {\n  return () => api.query.elections.nextVoterSet().pipe((0, _operators.switchMap)(nextVoterSet => (0, _rxjs.combineLatest)((0, _rxjs.of)(api.consts.elections.voterSetSize), api.query.elections.voters.multi([...Array(+nextVoterSet + 1).keys()].map((_, i) => [i])))), (0, _operators.map)(result => {\n    const _result = _slicedToArray(result, 2),\n          setSize = _result[0],\n          voters = _result[1];\n\n    return voters.reduce((result, vec, setIndex) => {\n      vec.forEach((e, index) => {\n        // re-create the index based on position 0 is [0][0] and likewise\n        // 64 (0..63 in first) is [1][0] (the first index value in set 2)\n        const accountId = e.unwrapOr(null);\n\n        if (accountId) {\n          result[accountId.toString()] = {\n            globalIndex: setSize.muln(setIndex).addn(index),\n            index: new _bn.default(index),\n            setIndex: (0, _types.createType)('SetIndex', setIndex)\n          };\n        }\n      });\n      return result;\n    }, {});\n  }), (0, _drr.drr)());\n}","map":null,"metadata":{},"sourceType":"script"}