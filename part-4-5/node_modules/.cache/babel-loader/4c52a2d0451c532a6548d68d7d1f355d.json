{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/home/thib/github/substrate-developer-hub/basic-dapp/part-4-5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fees = fees;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _drr = require(\"../util/drr\"); // Copyright 2017-2019 @polkadot/api-derive authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n/**\n * @name fees\n * @returns An object containing the combined results of the storage queries for\n * all relevant fees as declared in the substrate chain spec.\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.balances.fees(([creationFee, transferFee]) => {\n *   console.log(`The fee for creating a new account on this chain is ${creationFee} units. The fee required for making a transfer is ${transferFee} units.`);\n * });\n * ```\n */\n\n\nfunction fees(api) {\n  return () => {\n    return (api.consts.balances ? (0, _rxjs.of)([// get values from api.const for substrate versions post spec_version: 101\n    // https://github.com/paritytech/substrate/pull/2883/files#diff-5e5e1c3aec9ddfde0a9054d062ab3db9R131\n    api.consts.balances.creationFee, api.consts.balances.existentialDeposit, api.consts.balances.transactionBaseFee, api.consts.balances.transactionByteFee, api.consts.balances.transferFee]) : api.queryMulti([// Support older versions and get values from storage\n    api.query.balances.creationFee, api.query.balances.existentialDeposit, api.query.balances.transactionBaseFee, api.query.balances.transactionByteFee, api.query.balances.transferFee])).pipe((0, _operators.map)(_ref => {\n      let _ref2 = _slicedToArray(_ref, 5),\n          creationFee = _ref2[0],\n          existentialDeposit = _ref2[1],\n          transactionBaseFee = _ref2[2],\n          transactionByteFee = _ref2[3],\n          transferFee = _ref2[4];\n\n      return {\n        creationFee,\n        existentialDeposit,\n        transactionBaseFee,\n        transactionByteFee,\n        transferFee\n      };\n    }), (0, _drr.drr)());\n  };\n}","map":null,"metadata":{},"sourceType":"script"}