{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _AbstractArray = _interopRequireDefault(require(\"./AbstractArray\")); // Copyright 2017-2019 @polkadot/types authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n/**\n * @name VectorAny\n * @description\n * This manages codec arrays, assuming that the inputs are already of type Codec. Unlike\n * a vector, this can be used to manage array-like structures with variable arguments of\n * any types\n */\n\n\nclass VectorAny extends _AbstractArray.default {\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n  toRawType() {\n    // FIXME This is basically an any type, cannot instantiate via createType\n    return 'Vec<Codec>';\n  }\n\n}\n\nexports.default = VectorAny;","map":null,"metadata":{},"sourceType":"script"}