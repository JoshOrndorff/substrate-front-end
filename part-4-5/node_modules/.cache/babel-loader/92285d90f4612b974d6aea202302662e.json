{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.Usurped = exports.Invalid = exports.Ready = exports.Future = exports.Finalized = exports.Dropped = exports.Broadcast = void 0;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _Enum = _interopRequireDefault(require(\"../codec/Enum\"));\n\nvar _Vector = _interopRequireDefault(require(\"../codec/Vector\"));\n\nvar _Hash = _interopRequireDefault(require(\"../primitive/Hash\"));\n\nvar _Null = _interopRequireDefault(require(\"../primitive/Null\"));\n\nvar _Text = _interopRequireDefault(require(\"../primitive/Text\")); // Copyright 2017-2019 @polkadot/types authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n/**\n * @name Broadcast\n * @description\n * An [[ExtrinsicStatus]] indicating that the [[Extrinsic]] has been boradcast to peers\n */\n\n\nclass Broadcast extends _Vector.default.with(_Text.default) {}\n/**\n * @name Dropped\n * @description\n * An [[ExtrinsicStatus]] indicating that the [[Extrinsic]] has been dropped\n */\n\n\nexports.Broadcast = Broadcast;\n\nclass Dropped extends _Null.default {}\n/**\n * @name Finalized\n * @description\n * An [[ExtrinsicStatus] indicating that the [[Extrinsic]]] has been finalized and included\n */\n\n\nexports.Dropped = Dropped;\n\nclass Finalized extends _Hash.default {}\n/**\n * @name Future\n * @description\n * An [[ExtrinsicStatus]] indicating that the [[Extrinsic]] has been added to the future queue\n */\n\n\nexports.Finalized = Finalized;\n\nclass Future extends _Null.default {}\n/**\n * @name Ready\n * @description\n * An [[ExtrinsicStatus]] indicating that the [[Extrinsic]] has been added to the ready queue\n */\n\n\nexports.Future = Future;\n\nclass Ready extends _Null.default {}\n/**\n * @name Invalid\n * @description\n * An [[ExtrinsicStatus]] indicating that the [[Extrinsic]] is invalid\n */\n\n\nexports.Ready = Ready;\n\nclass Invalid extends _Null.default {}\n/**\n * @name Usurped\n * @description\n * An [[ExtrinsicStatus]] indicating that the [[Extrinsic]] has been usurped\n */\n\n\nexports.Invalid = Invalid;\n\nclass Usurped extends _Hash.default {}\n/**\n * @name ExtrinsicStatus\n * @description\n * An [[Enum]] that indicates the status of the [[Extrinsic]] as been submitted\n */\n\n\nexports.Usurped = Usurped;\n\nclass ExtrinsicStatus extends _Enum.default {\n  constructor(value, index) {\n    super({\n      Future,\n      Ready,\n      Finalized,\n      Usurped,\n      Broadcast,\n      Dropped,\n      Invalid\n    }, value, index);\n  }\n  /**\n   * @description Returns the item as a [[Broadcast]]\n   */\n\n\n  get asBroadcast() {\n    (0, _util.assert)(this.isBroadcast, \"Cannot convert '\".concat(this.type, \"' via asBroadcast\"));\n    return this.value;\n  }\n  /**\n   * @description Returns the item as a [[Dropped]]\n   */\n\n\n  get asDropped() {\n    (0, _util.assert)(this.isDropped, \"Cannot convert '\".concat(this.type, \"' via asDropped\"));\n    return this.value;\n  }\n  /**\n   * @description Returns the item as a [[Finalized]]\n   */\n\n\n  get asFinalized() {\n    (0, _util.assert)(this.isFinalized, \"Cannot convert '\".concat(this.type, \"' via asFinalized\"));\n    return this.value;\n  }\n  /**\n   * @description Returns the item as a [[Future]]\n   */\n\n\n  get asFuture() {\n    (0, _util.assert)(this.isFuture, \"Cannot convert '\".concat(this.type, \"' via asFuture\"));\n    return this.value;\n  }\n  /**\n   * @description Returns the item as a [[Invalid]]\n   */\n\n\n  get asInvalid() {\n    (0, _util.assert)(this.isInvalid, \"Cannot convert '\".concat(this.type, \"' via asInvalid\"));\n    return this.value;\n  }\n  /**\n   * @description Returns the item as a [[Ready]]\n   */\n\n\n  get asReady() {\n    (0, _util.assert)(this.isReady, \"Cannot convert '\".concat(this.type, \"' via asReady\"));\n    return this.value;\n  }\n  /**\n   * @description Returns the item as a [[Usurped]]\n   */\n\n\n  get asUsurped() {\n    (0, _util.assert)(this.isUsurped, \"Cannot convert '\".concat(this.type, \"' via asUsurped\"));\n    return this.value;\n  }\n  /**\n   * @description Returns true if the status is boadcast\n   */\n\n\n  get isBroadcast() {\n    return this.type === 'Broadcast';\n  }\n  /**\n   * @description Returns true if the status is dropped\n   */\n\n\n  get isDropped() {\n    return this.type === 'Dropped';\n  }\n  /**\n   * @description Returns true if the status is finalized\n   */\n\n\n  get isFinalized() {\n    return this.type === 'Finalized';\n  }\n  /**\n   * @description Returns true if the status is future\n   */\n\n\n  get isFuture() {\n    return this.type === 'Future';\n  }\n  /**\n   * @description Returns true if the status is invalid\n   */\n\n\n  get isInvalid() {\n    return this.type === 'Invalid';\n  }\n  /**\n   * @description Returns true if the status is eady\n   */\n\n\n  get isReady() {\n    return this.type === 'Ready';\n  }\n  /**\n   * @description Returns true if the status is usurped\n   */\n\n\n  get isUsurped() {\n    return this.type === 'Usurped';\n  }\n\n}\n\nexports.default = ExtrinsicStatus;","map":null,"metadata":{},"sourceType":"script"}