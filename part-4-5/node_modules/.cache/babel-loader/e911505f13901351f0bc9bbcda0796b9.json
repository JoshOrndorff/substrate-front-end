{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.extraDefinition = void 0;\n\nvar _Struct = _interopRequireDefault(require(\"../../../codec/Struct\"));\n\nvar _BalanceCompact = _interopRequireDefault(require(\"../../BalanceCompact\"));\n\nvar _ExtrinsicEra = _interopRequireDefault(require(\"../ExtrinsicEra\"));\n\nvar _NonceCompact = _interopRequireDefault(require(\"../../../type/NonceCompact\")); // Copyright 2017-2019 @polkadot/types authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n\nconst extraDefinition = {\n  era: _ExtrinsicEra.default,\n  nonce: _NonceCompact.default,\n  tip: _BalanceCompact.default\n};\n/**\n * @name ExtrinsicExtraV2\n * @description\n * A container for the extra information in an extrinsic\n */\n\nexports.extraDefinition = extraDefinition;\n\nclass ExtrinsicExtraV2 extends _Struct.default {\n  constructor(value) {\n    super(extraDefinition, value);\n  }\n  /**\n   * @description The [[ExtrinsicEra]] (mortal or immortal) this signature applies to\n   */\n\n\n  get era() {\n    return this.get('era');\n  }\n  /**\n   * @description The [[NonceCompact]] for the signature\n   */\n\n\n  get nonce() {\n    return this.get('nonce');\n  }\n  /**\n   * @description The [[Address]] that signed\n   */\n\n\n  get signer() {\n    return this.get('signer');\n  }\n  /**\n   * @description The [[BalanceCompact]] tip\n   */\n\n\n  get tip() {\n    return this.get('tip');\n  }\n\n}\n\nexports.default = ExtrinsicExtraV2;","map":null,"metadata":{},"sourceType":"script"}