{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calcSi = calcSi;\nexports.findSi = findSi;\nexports.SI = exports.SI_MID = void 0; // Copyright 2017-2019 @polkadot/util authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nconst SI_MID = 8;\nexports.SI_MID = SI_MID;\nconst SI = [{\n  power: -24,\n  value: 'y',\n  text: 'yocto'\n}, {\n  power: -21,\n  value: 'z',\n  text: 'zepto'\n}, {\n  power: -18,\n  value: 'a',\n  text: 'atto'\n}, {\n  power: -15,\n  value: 'f',\n  text: 'femto'\n}, {\n  power: -12,\n  value: 'p',\n  text: 'pico'\n}, {\n  power: -9,\n  value: 'n',\n  text: 'nano'\n}, {\n  power: -6,\n  value: 'Âµ',\n  text: 'micro'\n}, {\n  power: -3,\n  value: 'm',\n  text: 'milli'\n}, {\n  power: 0,\n  value: '-',\n  text: 'Unit'\n}, // position 8\n{\n  power: 3,\n  value: 'k',\n  text: 'Kilo'\n}, {\n  power: 6,\n  value: 'M',\n  text: 'Mega'\n}, {\n  power: 9,\n  value: 'G',\n  text: 'Giga'\n}, {\n  power: 12,\n  value: 'T',\n  text: 'Tera'\n}, {\n  power: 15,\n  value: 'P',\n  text: 'Peta'\n}, {\n  power: 18,\n  value: 'E',\n  text: 'Exa'\n}, {\n  power: 21,\n  value: 'Z',\n  text: 'Zeta'\n}, {\n  power: 24,\n  value: 'Y',\n  text: 'Yotta'\n}];\nexports.SI = SI;\n\nfunction calcSi(text, decimals) {\n  return SI[SI_MID - 1 + Math.ceil((text.length - decimals) / 3)] || SI[SI.length - 1];\n} // Given a SI type (e.g. k, m, Y) find the SI definition\n\n\nfunction findSi(type) {\n  // use a loop here, better RN support (which doesn't have [].find)\n  for (let i = 0; i < SI.length; i++) {\n    if (SI[i].value === type) {\n      return SI[i];\n    }\n  }\n\n  return SI[SI_MID];\n}","map":null,"metadata":{},"sourceType":"script"}