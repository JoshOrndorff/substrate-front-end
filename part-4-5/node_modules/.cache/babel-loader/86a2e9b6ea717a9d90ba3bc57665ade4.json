{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _util = require(\"@polkadot/util\");\n\nrequire(\"./injector\");\n\nvar _codec = require(\"./codec\");\n\nObject.keys(_codec).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _codec[key];\n    }\n  });\n});\n\nvar _index = require(\"./index.types\");\n\nObject.keys(_index).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _index[key];\n    }\n  });\n}); // Copyright 2017-2019 @polkadot/types authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n// NOTE When adding any types here, we need to update the documentation links as\n// well - <root>/docs/SUMMARY.md as well as ../README.md\n// HACK Register our types before anything else - if just means that any use of\n// createType (either here, like in derive) or in users of this app, will have\n// the type available without resorting to juggling imports themselves.\n//\n// This was found here in api-derive (see ReferendumInfoExtended) as well in apps,\n// where `createType` was used on constant definitions, but before the actual API\n// has been injected (which registers the srml types).\n//\n// It needs resolution, but atm, no worse than having classes that are statically\n// defined, so really, eating the elephant one bite at a time...\n\n(0, _util.assertSingletonPackage)('@polkadot/types');","map":null,"metadata":{},"sourceType":"script"}