{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _Struct = _interopRequireDefault(require(\"../../../codec/Struct\"));\n\nvar _U8a = _interopRequireDefault(require(\"../../../codec/U8a\"));\n\nvar _Hash = _interopRequireDefault(require(\"../../Hash\"));\n\nvar _ExtrinsicExtra = require(\"./ExtrinsicExtra\");\n\nvar _util = require(\"../util\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nconst basePayload = _objectSpread({}, _ExtrinsicExtra.extraDefinition, {\n  blockHash: _Hash.default\n});\n/**\n * @name SignaturePayloadV2\n * @description\n * A signing payload for an [[Extrinsic]]. For the final encoding, it is variable length based\n * on the contents included\n */\n\n\nclass SignaturePayloadV2 extends _Struct.default {\n  constructor(value) {\n    super(_objectSpread({\n      method: _U8a.default\n    }, basePayload), value);\n  }\n  /**\n   * @description The block [[Hash]] the signature applies to (mortal/immortal)\n   */\n\n\n  get blockHash() {\n    return this.get('blockHash');\n  }\n  /**\n   * @description The [[U8a]] contained in the payload\n   */\n\n\n  get method() {\n    return this.get('method');\n  }\n  /**\n   * @description The [[ExtrinsicEra]]\n   */\n\n\n  get era() {\n    return this.get('era');\n  }\n  /**\n   * @description The [[NonceCompact]]\n   */\n\n\n  get nonce() {\n    return this.get('nonce');\n  }\n  /**\n   * @description The tip [[BalanceCompact]]\n   */\n\n\n  get tip() {\n    return this.get('tip');\n  }\n  /**\n   * @description Sign the payload with the keypair\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  sign(signerPair) {\n    return (0, _util.sign)(signerPair, this.toU8a());\n  }\n\n}\n\nexports.default = SignaturePayloadV2;","map":null,"metadata":{},"sourceType":"script"}