{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _types = require(\"@polkadot/types\"); // Copyright 2017-2019 @polkadot/api authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n\nclass SignerPayload extends _types.Struct.with({\n  address: _types.Address,\n  blockHash: _types.Hash,\n  blockNumber: _types.BlockNumber,\n  era: _types.ExtrinsicEra,\n  genesisHash: _types.Hash,\n  method: _types.Method,\n  nonce: _types.Compact.with(_types.Nonce),\n  tip: _types.Compact.with(_types.Balance),\n  version: _types.U8\n}) {\n  /**\n   * @description Returns this as a SignerPayloadType. This works since the Struct.with injects all the getters automatically (just ensure the 2 definitiona are matching)\n   */\n  get self() {\n    return this;\n  }\n  /**\n   * @description Creates an representation of the structure as an ISignerPayload JSON\n   */\n\n\n  toPayload() {\n    const _this$self = this.self,\n          address = _this$self.address,\n          blockHash = _this$self.blockHash,\n          blockNumber = _this$self.blockNumber,\n          era = _this$self.era,\n          genesisHash = _this$self.genesisHash,\n          method = _this$self.method,\n          nonce = _this$self.nonce,\n          tip = _this$self.tip,\n          version = _this$self.version;\n    return {\n      address: address.toString(),\n      blockHash: blockHash.toHex(),\n      blockNumber: blockNumber.toHex(),\n      era: era.toHex(),\n      genesisHash: genesisHash.toHex(),\n      method: method.toHex(),\n      nonce: nonce.toHex(),\n      tip: tip.toHex(),\n      version: version.toNumber()\n    };\n  }\n\n}\n\nexports.default = SignerPayload;","map":null,"metadata":{},"sourceType":"script"}