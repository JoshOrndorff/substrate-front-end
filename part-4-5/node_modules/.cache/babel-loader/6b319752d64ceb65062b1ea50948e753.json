{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = genericSubject;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _rxjs = require(\"rxjs\");\n\nvar _item = _interopRequireDefault(require(\"../options/item\"));\n\nvar _development = _interopRequireDefault(require(\"./development\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction callNext(current, subject, withTest) {\n  const isDevMode = _development.default.isDevelopment();\n\n  const filtered = {};\n  Object.keys(current).forEach(key => {\n    const _current$key$json = current[key].json,\n          _current$key$json2 = _current$key$json === void 0 ? {} : _current$key$json,\n          _current$key$json2$me = _current$key$json2.meta,\n          _current$key$json2$me2 = _current$key$json2$me === void 0 ? {} : _current$key$json2$me,\n          _current$key$json2$me3 = _current$key$json2$me2.isTesting,\n          isTesting = _current$key$json2$me3 === void 0 ? false : _current$key$json2$me3;\n\n    if (!withTest || isDevMode || isTesting !== true) {\n      filtered[key] = current[key];\n    }\n  });\n  subject.next(filtered);\n}\n\nfunction genericSubject(keyCreator) {\n  let withTest = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  let current = {};\n  const subject = new _rxjs.BehaviorSubject({});\n\n  const next = () => callNext(current, subject, withTest);\n\n  _development.default.subject.subscribe(next);\n\n  return {\n    add: (store, address, json) => {\n      current = _objectSpread({}, current);\n      current[address] = {\n        json: _objectSpread({}, json, {\n          address\n        }),\n        option: (0, _item.default)(address, json.meta.name, !json.meta.isRecent)\n      };\n\n      const isDevMode = _development.default.isDevelopment();\n\n      if (!json.meta.isInjected && (!json.meta.isTesting || isDevMode)) {\n        store.set(keyCreator(address), json);\n      }\n\n      next();\n      return current[address];\n    },\n    remove: (store, address) => {\n      current = _objectSpread({}, current);\n      delete current[address];\n      store.remove(keyCreator(address));\n      next();\n    },\n    subject\n  };\n}","map":null,"metadata":{},"sourceType":"script"}