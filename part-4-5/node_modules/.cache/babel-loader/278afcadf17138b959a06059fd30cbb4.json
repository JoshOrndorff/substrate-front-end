{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.childStorageKeyPrefix = exports.changesTrieConfig = exports.extrinsicIndex = exports.heapPages = exports.code = exports.authorityPrefix = exports.authorityCount = void 0;\n\nvar _Storage = require(\"@polkadot/types/Metadata/v6/Storage\");\n\nvar _types = require(\"@polkadot/types\");\n\nvar _createFunction = _interopRequireDefault(require(\"./createFunction\")); // Copyright 2017-2019 @polkadot/api-metadata authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n// Small helper function to factorize code on this page.\n\n\nconst createRuntimeFunction = (method, key, _ref) => {\n  let documentation = _ref.documentation,\n      type = _ref.type;\n  return (0, _createFunction.default)({\n    meta: {\n      documentation: new _types.Vector(_types.Text, [documentation]),\n      modifier: new _Storage.StorageEntryModifier(1),\n      // default\n      type: new _Storage.StorageEntryType(type, 0),\n      toJSON: () => key\n    },\n    method,\n    prefix: 'Substrate',\n    section: 'substrate'\n  }, {\n    key,\n    skipHashing: true\n  });\n}; // @deprecated: The ':auth:' (authorityPrefix) and ':auth:len' (authorityCount) storage keys\n// have been removed in https://github.com/paritytech/substrate/pull/2802\n\n\nconst authorityCount = createRuntimeFunction('authorityCount', ':auth:len', {\n  documentation: 'Number of authorities.',\n  type: 'u32'\n});\nexports.authorityCount = authorityCount;\nconst authorityPrefix = createRuntimeFunction('authorityPrefix', ':auth:', {\n  documentation: 'Prefix under which authorities are stored.',\n  type: 'u32'\n});\nexports.authorityPrefix = authorityPrefix;\nconst code = createRuntimeFunction('code', ':code', {\n  documentation: 'Wasm code of the runtime.',\n  type: 'Bytes'\n});\nexports.code = code;\nconst heapPages = createRuntimeFunction('heapPages', ':heappages', {\n  documentation: 'Number of wasm linear memory pages required for execution of the runtime.',\n  type: 'u64'\n});\nexports.heapPages = heapPages;\nconst extrinsicIndex = createRuntimeFunction('extrinsicIndex', ':extrinsic_index', {\n  documentation: 'Current extrinsic index (u32) is stored under this key.',\n  type: 'u32'\n});\nexports.extrinsicIndex = extrinsicIndex;\nconst changesTrieConfig = createRuntimeFunction('changesTrieConfig', ':changes_trie', {\n  documentation: 'Changes trie configuration is stored under this key.',\n  type: 'u32'\n});\nexports.changesTrieConfig = changesTrieConfig;\nconst childStorageKeyPrefix = createRuntimeFunction('childStorageKeyPrefix', ':child_storage:', {\n  documentation: 'Prefix of child storage keys.',\n  type: 'u32'\n});\nexports.childStorageKeyPrefix = childStorageKeyPrefix;","map":null,"metadata":{},"sourceType":"script"}