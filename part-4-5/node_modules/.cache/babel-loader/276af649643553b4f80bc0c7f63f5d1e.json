{"ast":null,"code":"import _slicedToArray from \"/home/thib/github/substrate-developer-hub/basic-dapp/part-4-5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/thib/github/substrate-developer-hub/basic-dapp/part-4-5/src/NodeInfo.js\";\nimport React, { useEffect, useState } from 'react';\nexport default function NodeInfo(props) {\n  const api = props.api;\n\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        nodeInfo = _useState2[0],\n        setNodeInfo = _useState2[1];\n\n  useEffect(() => {\n    const getInfo = () => {\n      Promise.all([api.rpc.system.chain(), api.rpc.system.name(), api.rpc.system.version()]).then(([chain, nodeName, nodeVersion]) => {\n        setNodeInfo({\n          chain,\n          nodeName,\n          nodeVersion\n        });\n      }).catch(e => console.error(e));\n    };\n\n    getInfo();\n  }, [api.rpc.system]);\n  return React.createElement(React.Fragment, null, nodeInfo.chain, \" - \", nodeInfo.nodeName, \" (v\", nodeInfo.nodeVersion, \")\", React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/thib/github/substrate-developer-hub/basic-dapp/part-4-5/src/NodeInfo.js"],"names":["React","useEffect","useState","NodeInfo","props","api","nodeInfo","setNodeInfo","getInfo","Promise","all","rpc","system","chain","name","version","then","nodeName","nodeVersion","catch","e","console","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,QAC/BC,GAD+B,GACxBD,KADwB,CAC/BC,GAD+B;;AAAA,oBAENH,QAAQ,CAAC,EAAD,CAFF;AAAA;AAAA,QAE/BI,QAF+B;AAAA,QAErBC,WAFqB;;AAItCN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,OAAO,GAAG,MAAM;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,CACVL,GAAG,CAACM,GAAJ,CAAQC,MAAR,CAAeC,KAAf,EADU,EAEVR,GAAG,CAACM,GAAJ,CAAQC,MAAR,CAAeE,IAAf,EAFU,EAGVT,GAAG,CAACM,GAAJ,CAAQC,MAAR,CAAeG,OAAf,EAHU,CAAZ,EAKCC,IALD,CAKM,CAAC,CAACH,KAAD,EAAQI,QAAR,EAAkBC,WAAlB,CAAD,KAAoC;AACxCX,QAAAA,WAAW,CAAE;AACXM,UAAAA,KADW;AAEXI,UAAAA,QAFW;AAGXC,UAAAA;AAHW,SAAF,CAAX;AAKD,OAXD,EAYCC,KAZD,CAYQC,CAAD,IAAOC,OAAO,CAACC,KAAR,CAAcF,CAAd,CAZd;AAaD,KAdD;;AAeAZ,IAAAA,OAAO;AACR,GAjBQ,EAiBP,CAACH,GAAG,CAACM,GAAJ,CAAQC,MAAT,CAjBO,CAAT;AAmBA,SACE,0CACGN,QAAQ,CAACO,KADZ,SACsBP,QAAQ,CAACW,QAD/B,SAC4CX,QAAQ,CAACY,WADrD,OAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD","sourcesContent":["import React, {useEffect, useState} from 'react';\n\nexport default function NodeInfo(props) {\n  const {api} = props;\n  const [nodeInfo, setNodeInfo] = useState({})\n\n  useEffect(() => {\n    const getInfo = () => {\n      Promise.all([\n        api.rpc.system.chain(),\n        api.rpc.system.name(),\n        api.rpc.system.version(),\n      ])\n      .then(([chain, nodeName, nodeVersion]) => {\n        setNodeInfo ({\n          chain,\n          nodeName,\n          nodeVersion\n        })\n      })\n      .catch((e) => console.error(e));\n    }\n    getInfo()\n  },[api.rpc.system]);\n  \n  return (\n    <>\n      {nodeInfo.chain} - {nodeInfo.nodeName} (v{nodeInfo.nodeVersion})\n      <hr/>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}