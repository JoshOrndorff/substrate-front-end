{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toV1;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _codec = require(\"../../codec\");\n\nvar _Calls = require(\"../v1/Calls\");\n\nvar _Events = require(\"../v1/Events\");\n\nvar _Metadata = _interopRequireWildcard(require(\"../v1/Metadata\"));\n\nvar _Storage = require(\"../v1/Storage\"); // Copyright 2017-2019 @polkadot/types authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n\nfunction toV1Calls(modul) {\n  return modul.module.call.functions.length === 0 ? new _codec.Option(_codec.Vector.with(_Calls.FunctionMetadata)) : new _codec.Option(_codec.Vector.with(_Calls.FunctionMetadata), modul.module.call.functions);\n}\n\nfunction toV1Events(metadataV0, prefix) {\n  const events = metadataV0.events.find(event => event.name.eq(prefix));\n  return events ? new _codec.Option(_codec.Vector.with(_Events.EventMetadata), events.events) : new _codec.Option(_codec.Vector.with(_Events.EventMetadata));\n}\n\nfunction toV1Storage(modul) {\n  return modul.storage.isNone ? new _codec.Option(_codec.Vector.with(_Storage.StorageFunctionMetadata)) : new _codec.Option(_codec.Vector.with(_Storage.StorageFunctionMetadata), modul.storage.unwrap().functions);\n}\n/**\n * Function that converts MetadataV0 to MetadataV1\n */\n\n\nfunction toV1(metadataV0) {\n  return new _Metadata.default({\n    modules: metadataV0.modules.map(modul => {\n      // The prefix of this module (capitalized)\n      const prefix = modul.storage.isSome ? modul.storage.unwrap().prefix.toString() : (0, _util.stringUpperFirst)(modul.prefix.toString()); // If this module doesn't have storage, we just assume the prefix is the name capitalized\n\n      return new _Metadata.ModuleMetadata({\n        name: modul.prefix,\n        // Not capitalized\n        prefix,\n        // Capitalized\n        storage: toV1Storage(modul),\n        calls: toV1Calls(modul),\n        events: toV1Events(metadataV0, modul.prefix)\n      });\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"script"}